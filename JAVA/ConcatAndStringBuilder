#결론은 StringBuilder를 습관적으로 사용하는 것이 좋다
원래는 + 을 해도 새로운 공간을 만들어 넣지만, 
complier 가 최적화 작업을 통해 일부 String 의 + 연산을 StringBuilder 로 치환해서 처리한다. 
항상 그렇게 되진 않고 가장 치환이 잘 되는 경우는 한 문장 안에서 계속 + 로 연결할 경우이다.
따라서 습관적으로 StringBuilder 의 append() 로 체이닝 되도록 변경되도록 사용한다.

#동작방식차이
+ 연산자와 concat 동작방식은 다르다.
concat은 합친 문자열을 new String으로 생성하고
+ 연산자는 아래 코드와 같이 StringBuilder 클래스로 변환하여 append로 문자열을 더해준 뒤 toString()으로 결과값을 변환하여 넘겨준다.

#String 클래스에서 문자열을 더할 경우(concat method)

주소	값
1000	try
2000	tryHello
3000	tryHelloWorld
(문자열을 더할 때마다 주소를 새로 할당하여 생성)

#StringBuilder클래스에서 문자열을 더할 경우(+ 연산자)

주소	값
1000	try
1000	tryHello
1000	tryHelloWorld
(같은 주소에 문자열을 추가를 하는 방식)

따라서 2개의 문자열을 합칠 경우 concat을 사용하고, str1 + str2 + str3 + ...과 같이 여러 문자열을 합칠 경우 +연산자를 사용하거나
StringBuilder를 사용하는게 좋다.



